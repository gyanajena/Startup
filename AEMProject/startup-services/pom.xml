<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.startup</groupId>
	<artifactId>startup-services</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>${project.groupId} - ${project.artifactId}</name>
	<description>
        An OSGi Bundle containing all of the backend CQ service implementations for the mgm project. During development, this bundle can be automatically deployed to your CQ instance by activating the "auto-deploy" profile and running the Maven "install" lifecycle phase (e.g. "mvn -Pauto-deploy install"). This can also be done from within most IDEs like Eclipse.
	</description>
	<packaging>bundle</packaging>
	
	<properties>
		<maven.test.skip>true</maven.test.skip>
		<file.encoding>utf-8</file.encoding>
	</properties>
	<repositories>
		
		<repository>
			<id>adobe-cq</id>
			<name>Adobe CQ Repository</name>
			<url>http://repo.adobe.com/archiva/repository/day-central/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>adobe-public-releases</id>
			<name>Adobe Public Repository</name>
			<url>http://repo.adobe.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>mvnrepository</id>
			<url>http://mvnrepository.com/artifact/</url>
		</repository>			
		
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>internal</id>
			<name>Central Repository</name>
			<url>http://repo2.maven.org/maven2/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>snapshots</id>
			<name>Snapshots Repository</name>
			<url>http://repo2.maven.org/maven2/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>adobe-cq</id>
			<name>Adobe CQ Repository</name>
			<url>http://repo.adobe.com/archiva/repository/day-central/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.3</version>
			</plugin>


			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.0.1</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Export-Package></Export-Package>
						<Import-Package></Import-Package>
						<Include-Resource>{maven-resources}</Include-Resource>
					</instructions>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Build-Number>${BUILD_NUMBER}</Build-Number>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
				<version>1.15.0</version>
				<executions>
					<execution>
						<id>generate-scr-scrdescriptor</id>
						<goals>
							<goal>scr</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.felix
										</groupId>
										<artifactId>
											maven-scr-plugin
										</artifactId>
										<versionRange>
											[1.8.0,)
										</versionRange>
										<goals>
											<goal>scr</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<!-- Enables analysis which takes more memory but finds more bugs. If 
						you run out of memory, changes the value of the effort element to 'low'. -->
					<effort>Max</effort>
					<!-- Reports all bugs (other values are medium and max) -->
					<threshold>Low</threshold>
					<!-- Produces XML report -->
					<xmlOutput>true</xmlOutput>
				</configuration>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<rulesets>
						<!-- Two rule sets that come bundled with PMD -->
						<ruleset>/rulesets/braces.xml</ruleset>
						<ruleset>/rulesets/naming.xml</ruleset>
						<ruleset>/rulesets/codesize.xml</ruleset>
						<ruleset>/rulesets/basic.xml</ruleset>
						<ruleset>/rulesets/finalizers.xml</ruleset>
						<ruleset>/rulesets/coupling.xml</ruleset>
						<ruleset>/rulesets/imports.xml</ruleset>
						<ruleset>/rulesets/design.xml</ruleset>
						<ruleset>/rulesets/j2ee.xml</ruleset>
						<ruleset>/rulesets/unusedcode.xml</ruleset>
						<ruleset>/rulesets/controversial.xml</ruleset>
						<ruleset>/rulesets/strings.xml</ruleset>
						<ruleset>/rulesets/junit.xml</ruleset>
						<ruleset>/rulesets/logging-jakarta-commons.xml</ruleset>
						<ruleset>/rulesets/logging-java.xml</ruleset>
						<ruleset>/rulesets/optimizations.xml</ruleset>
					</rulesets>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<!-- enable only 1 report -->
							<report>pmd</report>
							<!-- <report>cpd</report> -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> 
				<version>2.3.2</version> <configuration> <formats> <format>xml</format> <format>html</format> 
				</formats> <canGenerate>true</canGenerate> </configuration> </plugin> <plugin> 
				<groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jxr-plugin</artifactId> 
				<version>2.1</version> <configuration> <aggregate>true</aggregate> </configuration> 
				</plugin> -->
			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> 
				<version>2.5.2</version> <configuration> <xmlOutput>true</xmlOutput> <failOnError>false</failOnError> 
				<xmlOutput>true</xmlOutput> <skip>false</skip> </configuration> </plugin> -->
		</plugins>
	</reporting>


	<profiles>
		<!-- Install the OSGi bundle automatically, during development -->
		<profile>
			<id>local-deploy</id>
			<build>
				<plugins>
					<plugin>
						<!-- Installation and Deployment support -->
						<groupId>org.apache.sling</groupId>
						<artifactId>maven-sling-plugin</artifactId>
						<version>2.0.4-incubator</version>
						<executions>
							<execution>
								<id>install-bundle</id>
								<goals>
									<goal>install</goal>
								</goals>
								<configuration>
									<slingUrl>http://localhost:4502/system/console/install</slingUrl>
									<user>admin</user>
									<password>admin</password>
									<!-- Whether to start the bundle after installing it. If the bundle 
										is just updated, this parameter is ignored even if the bundle is currently 
										stopped -->
									<bundleStart>true</bundleStart>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- ========================================================== -->
	<!-- D E P E N D E N C I E S -->
	<!-- ========================================================== -->
	<!-- The list of dependencies below should be checked, but serve as a rough 
		list based on typical usage. The versions are expected to change -->

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
			<version>1.9.6</version>
		</dependency>
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>4.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<optional>false</optional>
		</dependency>
		<dependency> 
			<groupId>com.adobe.aem</groupId> 
			<artifactId>aem-api</artifactId> 
			<version>6.0.0.1</version> 
			<scope>provided</scope> 
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.jcr.resource</artifactId>
			<version>2.3.6</version>
		</dependency>
        <dependency>
            <groupId>com.day.commons</groupId>
            <artifactId>day-commons-gfx</artifactId>
            <version>2.1.8</version>
        </dependency>
		<dependency>
			<groupId>org.jcrom</groupId>
			<artifactId>jcrom</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.3</version>
		</dependency>
		<!-- Spring related bundles-Not Required on Felix. Just for compilation Only -->
		<dependency>
			<groupId>org.apache.jackrabbit</groupId>
			<artifactId>jackrabbit-api</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.7</version>
		</dependency>		
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.jcr.api</artifactId>
			<version>2.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.sling</groupId>
			<artifactId>org.apache.sling.commons.scheduler</artifactId>
			<version>2.2.0</version>
		</dependency>
		
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>		
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>		
		<dependency>
			<groupId>org.im4java</groupId>
			<artifactId>im4java</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.3.0</version>
		</dependency>	
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.day.cq</groupId>
			<artifactId>cq-mailer</artifactId>
			<version>5.5.0</version>
		</dependency>
		<dependency>
			<groupId>com.day.commons.osgi.wrapper</groupId>
			<artifactId>com.day.commons.osgi.wrapper.commons-email</artifactId>
			<version>1.2.0-0002</version>
			<scope>provided</scope>
		</dependency>		
		<dependency>
		    <groupId>com.day.cq.wcm</groupId>
		    <artifactId>cq-msm-api</artifactId>
		    <version>5.6.2</version>
		</dependency>
		<dependency>
		    <groupId>com.day.cq.wcm</groupId>
		    <artifactId>cq-msm-core</artifactId>
		    <version>5.7.8</version>
		</dependency>
		<dependency>
            <groupId>org.apache.cocoon</groupId>
            <artifactId>cocoon-xml</artifactId>
            <version>2.0.0</version>
            <scope>provided</scope>
        </dependency>
	</dependencies>
</project>
